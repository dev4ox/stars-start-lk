# Generated by Django 5.0.7 on 2024-08-23 22:36

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import registration.models
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('panels', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ip_address', models.GenericIPAddressField(default='', null=True)),
                ('user_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.EmailField(error_messages={'unique': 'A user with this email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU')),
                ('profile_photo', models.ImageField(default='profile_photos/default.png', null=True, upload_to=registration.models.user_directory_path)),
                ('last_password_reset_request', models.DateTimeField(blank=True, null=True)),
                ('role', models.IntegerField(default=0)),
                ('promo_attempts', models.IntegerField(default=5)),
                ('last_promo_attempt', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', tinymce.models.HTMLField(default='')),
                ('image_path', models.ImageField(blank=True, default='services_images/default.jpg', null=True, upload_to=registration.models.catalog_directory_path)),
                ('is_active', models.BooleanField(default=True)),
                ('group_services', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='panels.groupservices')),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('discount', models.IntegerField(default=0)),
                ('expiration_date', models.DateField(verbose_name='Promo Code Expiration Date')),
                ('is_active', models.BooleanField(default=True)),
                ('one_time_use', models.BooleanField(default=True)),
                ('applicable_categories', models.ManyToManyField(blank=True, to='registration.category')),
                ('used_by', models.ManyToManyField(blank=True, related_name='used_promo_codes', to=settings.AUTH_USER_MODEL)),
                ('applicable_services', models.ManyToManyField(blank=True, to='registration.services')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('manager', models.CharField(default='', max_length=50, null=True)),
                ('user_ticket_path', models.CharField(max_length=200, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('new', 'Новый'), ('in_progress', 'В обработке'), ('completed', 'Завершен'), ('cancelled', 'Отменен'), ('paid', 'Оплачен'), ('not_paid', 'Не оплачен')], max_length=20)),
                ('user_comment', models.TextField(blank=True, null=True)),
                ('moder_comment', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount', models.IntegerField(default=0)),
                ('category', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.category')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('service', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='registration.services')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='service',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='registration.services'),
        ),
    ]
